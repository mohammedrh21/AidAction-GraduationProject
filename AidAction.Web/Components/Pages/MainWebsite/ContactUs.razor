@page "/MainWebsite/ContactUs"
@inject IMainWebsite _Main
@inject IJSRuntime JS
@layout MainLayout

<div class="container my-4">
    <div class="row justify-content-center">
        <div class="col-12 col-md-6 mb-4 text-center text-md-start">
            <h5 class="text-success">Our Camp Location</h5>
            <div id="map" class="border rounded" style="width:100%;height:400px;"></div>
        </div>

        <div class="col-12 col-md-6 text-center text-md-start ml-5 mt-3">
            <h3 class="text-success">Contact Information</h3>
            <p class="mb-2">
                <i class="fas fa-phone-alt"></i>
                <strong>Phone :</strong> <a href="tel:@ContactInfo.PhoneNumber">@ContactInfo.PhoneNumber</a>
            </p>
            <p class="mb-2">
                <i class="fas fa-envelope"></i>
                <strong>Email :</strong> <a href="mailto:@ContactInfo.Email">@ContactInfo.Email</a>
            </p>

            <h5 class="mt-4">Follow Us</h5>
            <div class="d-flex justify-content-center justify-content-md-start align-items-center gap-3 mt-2">
                @if (!string.IsNullOrWhiteSpace(ContactInfo.FacebookURL))
                {
                    <a href="@ContactInfo.FacebookURL" target="_blank" class="text-decoration-none text-primary">
                        <i class="fab fa-facebook-f "></i>
                    </a>
                }
                @if (!string.IsNullOrWhiteSpace(ContactInfo.InstagramURL))
                {
                    <a href="@ContactInfo.InstagramURL" target="_blank" class="text-decoration-none text-danger">
                        <i class="fab fa-instagram "></i>
                    </a>
                }
                @if (!string.IsNullOrWhiteSpace(ContactInfo.TikTokURL))
                {
                    <a href="@ContactInfo.TikTokURL" target="_blank" class="text-decoration-none text-dark">
                        <i class="fab fa-tiktok"></i>
                    </a>
                }
            </div>
        </div>
    </div>
</div>


@code {
    private ContactInfo ContactInfo { get; set; } = new ContactInfo();

    protected override async Task OnInitializedAsync()
    {
        await LoadContactInfoAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && ContactInfo.LocationLatitude.HasValue && ContactInfo.LocationLongitude.HasValue)
        {
            await JS.InvokeVoidAsync("loadMap", "map", ContactInfo.LocationLatitude, ContactInfo.LocationLongitude, 17);
        }
    }

    private async Task LoadContactInfoAsync()
    {
        var result = await _Main.ContactUsSelectAsync();
        var resultData = Newtonsoft.Json.JsonConvert.DeserializeObject<Result<List<ContactInfo>>>(result.ToString());

        if (resultData?.Data != null && resultData.Data.Any())
        {
            ContactInfo = resultData.Data.First();
        }
    }
}
