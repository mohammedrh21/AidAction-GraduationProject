@page "/ControlPanel/ChangePassword"
@layout ControlPanelLayout
@inject IJSRuntime _JS
@inject IAuthService _IAuth
@inject IAuthRepository _authRep

<PageTitle>Change Password</PageTitle>

<!-- Main Content -->
<div class="col-md-10 py-4 mt-5">
    <div class="py-5 d-flex flex-column flex-md-row align-items-start justify-content-start">
        <!-- Image Section (Aligns to the start) -->
        <div class="col-12 col-md-6 mb-4 mb-md-0">
            <img src="/StaticPics/ChangePassword.png" class="img-fluid" alt="Change Password">
        </div>

        <!-- Form Section -->
        <div class="col-12 col-md-6 d-flex flex-column">
            @if (!string.IsNullOrEmpty(dBResult.rv))
            {
                <span class="alert alert-@(int.Parse(dBResult.rv) > 0?"success":"danger")">@dBResult.Msg</span>              
            }

            <h2 class="mb-4">Change Password</h2>

            <EditForm Model="changePasswordModel" OnValidSubmit="ChangePasswordAsync" FormName="ChangePassword">
                <!-- Current Password -->
                <label for="currentPassword" class="form-label fw-bold">Current Password</label>
                <InputText @bind-Value="changePasswordModel.currentPassword" type="password" id="currentPassword" class="form-control mb-3" name="currentPassword" placeholder="Enter current password" required></InputText>

                <!-- New Password -->
                <label for="newPassword" class="form-label fw-bold">New Password</label>
                <InputText @bind-Value="changePasswordModel.newPassword" type="password" id="newPassword" class="form-control mb-3" name="newPassword" placeholder="Enter new password" required></InputText>

                <!-- Confirm New Password -->
                <label for="confirmNewPassword" class="form-label fw-bold">Confirm New Password</label>
                <InputText @bind-Value="changePasswordModel.confirmPassword" type="password" id="confirmNewPassword" class="form-control mb-3" name="confirmNewPassword" placeholder="Confirm new password" required></InputText>

                <button type="submit" class="btn btn-primary mt-2">Update</button>
            </EditForm>

        </div>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    private ChangePasswordModel changePasswordModel { get; set; } = new ChangePasswordModel();
    private DBResult dBResult { get; set; } = new DBResult();

    private async Task ChangePasswordAsync()
    {
        try
        {
            var userType = await _JS.InvokeAsync<string>("localStorage.getItem", "UserType");
            var userId = await _JS.InvokeAsync<string>("localStorage.getItem", "UserId");

            changePasswordModel.UserType = userType;
            if (!string.IsNullOrEmpty(userId))
            {
                changePasswordModel.UserId = int.Parse(userId);
            }

            var result = await _authRep.ChangePasswordAsync(changePasswordModel);

            if (result != null)
            {
                var res = Newtonsoft.Json.JsonConvert.DeserializeObject<DBResult>(result.ToString());
                dBResult.rv = res.rv;
                dBResult.Msg = res.Msg; 
            }
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw;
        }
    }

}
